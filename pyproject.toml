[project]
name = "deploy-django"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "bandit>=1.8.6",
    "colorama>=0.4.6",
    "django>=5.2.3",
    "django-concurrency>=2.7",
    "django-crum>=0.7.9",
    "djlint>=1.36.4",
    "psycopg2-binary>=2.9.10",
    "python-decouple>=3.8",
    "ruff>=0.12.10",
    "uvicorn[standard]>=0.24.0",
    "whitenoise>=6.8.2",
]

[project.optional-dependencies]
dev = [
    "djlint==1.36.4",
    "autopep8>=2.0.4",
    "flake8>=7.3.0",
    "pylint>=3.3.8",
    "pylint-django>=2.6.1",
    "pytest>=8.4.1",
    "pytest-django>=4.11.1",
    "safety>=3.6.1",
]
prod = [
    "gunicorn>=23.0.0",
    "waitress>=3.0.2",
    "uvicorn[standard]>=0.24.0",
    "whitenoise>=6.8.2",
    "psycopg2-binary>=2.9.9",
]

[tool.djlint]
profile="django"
ignore = "H030,H031"


[tool.ruff]
# Configurazione generale
line-length = 120
target-version = "py313"

# Escludi cartelle specifiche
exclude = [
    "migrations/*",
    "migrations/**",
    "src/*/migrations/*",
    "src/*/migrations/**",
    "src/**/migrations/*",
    "src/**/migrations/**",
    "src/**/migrations",
    "src/**/migrations/*.py",
    "src/**/migrations/**/*.py",
    "node_modules/*",
    "node_modules/**",
]

# Formatter configuration
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 120
exclude = '''
/(
    migrations
    | \.git
    | \.venv
    | __pycache__
    | build
    | dist
)/
'''

[tool.isort]
line_length = 120
skip_glob = ["**/migrations/*"]

[tool.autopep8]
max_line_length = 120

[tool.ruff.lint]
# Regole da attivare
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "N",   # naming
    "S",   # flake8-bandit (security)
]
ignore = [
    "D203",  # one-blank-line-before-class (incompatibile con D211)
    "D213",  # multi-line-summary-second-line (incompatibile con D212)
]

[tool.ruff.lint.isort]
known-third-party = ["django"]
known-first-party = ["home"]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Usa il formato Google per docstring

[tool.ruff.lint.per-file-ignores]
"examples/logging_example.py" = ["E402"]
"examples/check_logging.py" = ["E402"]
"src/home/settings.py" = ["F401", "F403"]
"src/home/settings/*.py" = ["F401", "F403"]
"tools/add_docstring_batch.py" = ["E402"]
"src/test_logging.py" = ["E402"]
# Scripts con subprocess controllato - ignorare warning sicurezza falsi positivi
"scripts/run_djlint.py" = ["S603"]  # subprocess con argomenti controllati
"scripts/run_pylint.py" = ["S603"]  # subprocess con argomenti controllati
"tools/project_stats.py" = ["S603"]  # subprocess con argomenti controllati
# Test files - ignorare security warnings per password hardcoded (normali nei test)
"**/test_*.py" = ["S105", "S106", "S110"]  # hardcoded password, secrets in tests
"**/tests.py" = ["S105", "S106", "S110"]  # hardcoded password, secrets in tests
"**/tests/*.py" = ["S105", "S106", "S110"]  # hardcoded password, secrets in tests

[tool.pylint.format]
max-line-length = 120

[tool.pylint.main]
ignore-paths = [
    "migrations",
    "*/migrations/*",
    "**/migrations/**",
]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "import-error",
    "no-name-in-module",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "wrong-import-position",
    "import-outside-toplevel",
]

[dependency-groups]
dev = [
    "coverage>=7.10.6",
]
