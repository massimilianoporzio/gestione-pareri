# Deploy Django Template - Comandi disponibili con Just
# Per visualizzare tutti i comandi: just --list o just

# Configura shell per Linux/macOS
set shell := ["bash", "-cu"]

# Variabili globali
python := "uv run"
django_manage := "uv run src/manage.py"

default:
    just help-unix

help-unix:
    shell: bash
    echo -e '\033[35m🚀 GESTIONE PRATICHE & PARERI - COMANDI DISPONIBILI\033[0m'
    echo -e '\033[90m============================================================\033[0m'
    echo
    echo -e '\033[32m📊 DJANGO & DATABASE:\033[0m'
    echo -e '  just run-server         🚀 Server di sviluppo Django'
    echo -e '  just run-dev            🔧 Server sviluppo (DEV)'
    echo -e '  just run-test           🧪 Server sviluppo (TEST)'
    echo -e '  just run-staging        🎭 Server sviluppo (STAGING)'
    echo -e '  just run-prod           ⚡ Server sviluppo (PROD)'
    echo -e '  just migrate            📦 Migrazioni database'
    echo -e '  just makemigrations     📝 Crea migrazioni'
    echo -e '  just shell              🐚 Shell Django'
    echo -e '  just test               🧪 Esegue test progetto'
    echo -e '  just test-dev           🔧 Test ambiente DEV'
    echo -e '  just test-test          🧪 Test ambiente TEST'
    echo -e '  just test-staging       🎭 Test ambiente STAGING'
    echo -e '  just test-prod          ⚡ Test ambiente PROD'
    echo
    echo -e '\033[36m🌐 SERVER & DEPLOY:\033[0m'
    echo -e '  just waitress           🪟 Server Waitress (Windows)'
    echo -e '  just run-uvicorn        ⚡ Server Uvicorn ASGI'
    echo -e '  just deploy             🎯 Deploy automatico'
    echo -e '  just deploy-dev         🔧 Deploy development'
    echo -e '  just deploy-staging     🧪 Deploy staging'
    echo -e '  just deploy-prod        🚀 Deploy production'
    echo -e '  just stop-servers       🛑 Ferma tutti i server'
    echo -e '  just kill-port          🔪 Termina processo porta 8000'
    echo
    echo -e '\033[33m🔧 QUALITY & FORMAT:\033[0m'
    echo -e '  just fix-all            ⭐ CORREZIONE GLOBALE completa'
    echo -e '  just lint-codacy        🔍 Controlli qualità Codacy'
    echo -e '  just add-docstrings     📝 Aggiunge docstring mancanti'
    echo -e '  just precommit-corporate 🏢 Pre-commit aziendale'
    echo -e '  just quality-corporate  🏢 Quality controlli alternativi'
    echo -e '  just fix-markdown       📝 Corregge problemi Markdown'
    echo
    echo -e '\033[37mℹ️  UTILITY:\033[0m'
    echo -e '  just stats              📊 Statistiche progetto'
    echo -e '  just check-env          🔍 Controllo ambiente'
    echo -e '  just check-env-dev      � Controllo ambiente DEV'
    echo -e '  just check-env-test     🧪 Controllo ambiente TEST'
    echo -e '  just check-env-staging  🎭 Controllo ambiente STAGING'
    echo -e '  just check-env-prod     ⚡ Controllo ambiente PROD'
    echo -e '  just generate-secret-key 🔑 Genera Django SECRET_KEY'
    echo -e '  just generate-secret-keys-all 🔐 Genera SECRET_KEY per tutti e 4 gli ambienti'
    echo -e '  just generate-db-passwords 🔐 Genera password PostgreSQL sicure'
    echo -e '  just create-db-script   🗄️ Crea script SQL con password reali'
    echo -e '  just --list             📋 Lista completa comandi'
    echo
    echo -e '\033[35m🏢 INTRANET AZIENDALE:\033[0m'
    echo -e '  just setup-iis          🌐 Configura IIS per intranet'
    echo -e '  just deploy-intranet    🚀 Deploy completo intranet'
    echo
    echo -e '\033[34m🪟 WINDOWS IIS DEPLOYMENT:\033[0m'
    echo -e '  just setup-iis-prod     🌐 Setup IIS produzione'
    echo -e '  just deploy-iis         🚀 Deploy completo con IIS'
    echo -e '  just deploy-iis         🚀 Deploy completo con IIS'
    echo
    echo -e '\033[34m🐧 LINUX/macOS NGINX:\033[0m'
    echo -e '  just setup-nginx        🌐 Configura Nginx reverse proxy'
    echo -e '  just deploy-nginx       🚀 Deploy completo con Nginx'
