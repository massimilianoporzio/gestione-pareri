name: SonarCloud Analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="$HOME/.cargo/bin:$PATH"  # Aggiunge uv al PATH

      - name: Install dependencies
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"  # Assicura che uv sia nel PATH
          uv pip install coverage
          uv sync

      - name: Run tests with coverage
        run: |
          cd src
          coverage run --source='.' manage.py test || true  # Continua anche se i test falliscono
          coverage xml
          mv coverage.xml ../coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Generate a token on SonarCloud.io, add to GitHub repo secrets
