name: SonarCloud Analysis

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  # Permette di eseguire questo workflow manualmente dalla tab Actions
  workflow_dispatch:

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessario per consentire SonarCloud di determinare quali file sono cambiati

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          # Installa coverage, pytest e pytest-cov
          python -m pip install coverage pytest pytest-cov

          # Usa uv per installare le dipendenze del progetto
          uv sync

      - name: Run tests with coverage
        run: |
          # Prova ad eseguire pytest con coverage
          python -m pytest --cov=src --cov-report=xml || true

          # Se il file coverage.xml non esiste, prova con Django
          if [ ! -f coverage.xml ]; then
            echo "Pytest non è riuscito a generare il report, provo con Django test"
            cd src
            python manage.py test || true
            coverage run --source='.' manage.py check || true
            coverage xml || true

            # Sposta il report se è stato generato
            if [ -f coverage.xml ]; then
              mv coverage.xml ../coverage.xml
            fi
          fi

          # Verifica finale per assicurarsi che esista un file coverage.xml
          if [ ! -f coverage.xml ]; then
            echo "Creazione di un file coverage.xml vuoto"
            echo '<?xml version="1.0" ?><coverage version="1.0"></coverage>' > coverage.xml
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necessario per le PR info
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
